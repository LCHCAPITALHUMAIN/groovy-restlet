#summary Examples of how to construct Restlet applications mentioned in [http://www.restlet.org/documentation/1.1/tutorial Restlet Tutorials]
#labels examples

=== [http://www.restlet.org/documentation/1.1/tutorial#part02 Part02] ===
{{{
//generic restlet constructor
builder.restlet(ofClass:"org.restlet.Client", consArgs:[protocol.HTTP] as Object[])
//using shortcut
builder.client(protocol.HTTP)
}}}

=== [http://www.restlet.org/documentation/1.1/tutorial#part03 Part03] ===
_At current moment, server construction does not support `restlet` way_
{{{
builder.server(protocol:protocol.HTTP,
        port:8182){
    restlet(handle:{req, resp->
        resp.setEntity("Hello World", mediaType.TEXT_PLAIN)
    })
}.start()

//or you can define restlet first
def restlet = builder.restlet(handle:{req, resp->
    resp.setEntity("Hello World", mediaType.TEXT_PLAIN)
})
builder.server(protocol:protocol.HTTP,
        port:8182, target:restlet).start()
}}}

=== [http://www.restlet.org/documentation/1.1/tutorial#part05 Part05] ===
{{{
//using component shortcut constructor
def component = builder.component{
    current.servers.add(protocol.HTTP, 8182)
    
    restlet(uri:"/trace", handle: {req, resp->
        println "To process request: ${req}"
        def message = """Resource URI: ${req.resourceRef}
Root URI : ${req.rootRef}
Routed part : ${req.resourceRef.baseRef}
Remaining part: ${req.resourceRef.remainingPart}"""
        resp.setEntity(message, mediaType.TEXT_PLAIN)
    })
}
}}}

=== [http://www.restlet.org/documentation/1.1/tutorial#part06 Part06] ===
{{{

def ROOT_URI = ""
builder.component{
    current.servers.add(protocol.HTTP, 8182)
    current.clients.add(protocol.FILE)
    
    application(uri:""){
        directory(root:ROOT_URI)
    }
}.start()
}}}

=== [http://www.restlet.org/documentation/1.1/tutorial#part09 Part09] ===
{{{
builder.component{
    current.servers.add(protocol.HTTP, 8182)
    application(uri:""){
        guard(scheme:challengeScheme.HTTP_BASIC, realm:"Tutorial")
            .secrets.put("scott","tiger".toCharArray())
            
        def dir = directory(autoAttach:false, root:"")
        current.root.next=dir
    }
}.start()
}}}

=== [http://www.restlet.org/documentation/1.1/tutorial#part10 Part10] ===
{{{
builder.component{
    current.servers.add(protocol.HTTP, 8182)
    application(uri:""){
        def router = router{
            def target = "http://www.google.com/search?q={keywords}"
            redirector(uri:"/search",
                    targetTemplate:target, mode:redirectorMode.MODE_CLIENT_TEMPORARY,
                    postAttach:{route->
                        route.extractQuery("keywords","kwd",true)
            })
        }        
    }
}.start()
}}}