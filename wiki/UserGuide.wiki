#summary Detail User Guide
#labels User-Guide

== Everything starts from `GroovyRestlet` ==
In order to using this Groovy DSL to construct Restlet application, you must first create an instance of `GroovyRestlet`.
{{{
RestletBuilder rb = new RestletBuilder(); 
}}}
Or if you would like Spring integration, you can feed an instance of `ApplicationContext` to constructor of `RestletBuilder`.
{{{
RestletBuilder rb = new RestletBuilder(appCtx);
}}}
Once a `RestletBuilder` instance is created, you can use it to build `Restlet` component by feeding it a `URI` of your script file. 
{{{
rb.build(uriToScript);
}}}
The return value of `build` method is depended on the return value of your script.
  According to Groovy Spec, the result of last statement of a Groovy script will be returned as the return value of an execution of the script.

== Global variables ==

For convenience, Groovy-Restlet adds following global variables to Groovy Context:
 # `builder` - the entry point of construction. You can directly refer this variable in your script
 # `protocol` - shortcut to [http://www.restlet.org/documentation/1.1/api/org/restlet/data/Protocol.html Protocol]; you can refer an instance of predefined [http://www.restlet.org/documentation/1.1/api/org/restlet/data/Protocol.html Protocol] by using `protocol.NAME` i.e. {{{protocol.HTTP}}};
 # `mediaType` - shortcut to [http://www.restlet.org/documentation/1.1/api/org/restlet/data/MediaType.html MediaType];
 # `status` - shortcut to [http://www.restlet.org/documentation/1.1/api/org/restlet/data/Status.html Status]
 # `challengeScheme` - shortcut to [http://www.restlet.org/documentation/1.1/api/org/restlet/data/ChallengeScheme.html ChallengeScheme]
 # `redirectorMode` - shortcut to mode of [http://www.restlet.org/documentation/1.1/api/org/restlet/Redirector.html Redirector]
 # `routingMode` - shortcut to mode of [http://www.restlet.org/documentation/1.1/api/org/restlet/Router.html Router]

Above variables can be directly referred in scripts.

== Constructors ==

=== `restlet` ===
=== `component` ===
=== `application` ===
=== `router` ===
=== `directory` ===
=== `redirector` ===
=== `client` ===
=== `server` ===
=== `guard` ===
=== `resource` ===